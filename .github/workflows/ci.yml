name: TDL CICD

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [fedora-latest, manjaro-latest]
        build_type: [Release]
        c_compiler: [gcc, clang]
        include:
          - os: fedora-latest
            cpp_compiler: g++
          - os: fedora-latest
            cpp_compiler: clang++
          - os: fedora-latest
            run: >
              sudo dnf install -y openal-soft-devel freetype-devel libpng-devel libsndfile-devel
          - os: manjaro-latest
            cpp_compiler: g++
          - os: manjaro-latest
            cpp_compiler: clang++
          - os: manjaro-latest
            run: >
              sudo pacman -Syu --noconfirm
              sudo pacman -S --noconfirm openal freetype2 libpng sndfile
        exclude:
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake

      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
